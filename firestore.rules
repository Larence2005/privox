rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules more readable
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // A user is a participant if their UID is in the chat's participantUids array.
    function isParticipant(chatId) {
      return isSignedIn() &&
             (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantUids);
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone signed in can read any user's profile (for displaying names/avatars)
      allow read: if isSignedIn();
      // Only the owner can create or update their own profile
      allow create, update: if isOwner(userId);
    }

    // Rules for the 'chats' collection
    match /chats/{chatId} {
      // Allow a query if it includes a 'where' clause that filters by the user's UID.
      // This is crucial for security.
      allow list: if isSignedIn() && request.query.resource.data.uid == request.auth.uid;
      
      // Allow reading/getting a specific chat document if the user is a participant.
      allow get: if isParticipant(chatId);

      // Allow creating a chat if the user is in the participants list of the new chat.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantUids;

      // Allow updating a chat (e.g., lastMessage) if the user is a participant.
      allow update: if isParticipant(chatId);
      
      // Allow deleting a chat if the user is a participant.
      allow delete: if isParticipant(chatId);

      // Rules for the 'messages' subcollection within a chat
      match /messages/{messageId} {
        // Allow reading and creating messages if the user is a participant of the parent chat.
        // A user can only create messages as themselves.
        allow list, read: if isParticipant(chatId);
        allow create: if isParticipant(chatId) && isOwner(request.resource.data.uid);
      }
    }
  }
}
